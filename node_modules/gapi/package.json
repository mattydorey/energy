{
  "name": "gapi",
  "description": "Node implementation of Google's JavaScript Library (Currently Implemented: Google+ & Google WebFonts)",
  "version": "0.0.3",
  "homepage": "http://github.com/phated/node-gapi",
  "repository": {
    "type": "git",
    "url": "git://github.com/phated/node-gapi.git"
  },
  "author": {
    "name": "Phated",
    "email": "blaine@iceddev.com",
    "url": "http://iceddev.com/"
  },
  "main": "./index.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "coffee-script": "*"
  },
  "devDependencies": {
    "should": "*",
    "mocha": "*"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/phated/node-gapi/raw/master/LICENSE"
    }
  ],
  "readme": "A Node.js implementation of the [\"JavaScript Client Library for Google APIs - Alpha version\"](https://code.google.com/p/google-api-javascript-client/)\n\n\n## Installation\n\nTo install gapi locally, use [npm](http://github.com/isaacs/npm):\n\n    $ npm install gapi\n\nTo install gapi globally, use [npm](http://github.com/isaacs/npm):\n\n    $ npm install -g gapi\n\n## Usage\n\nInclude gapi\n\n```javascript\nvar gapi = require('gapi');\n```\n\nTo get started, set your API key with `gapi.server.setApiKey()`:\n\n```javascript\ngapi.server.setApiKey('YOUR_API_KEY');\n```\n\nYou can then use `gapi.server.load('API_NAME', 'API_VERSION', CALLBACK)` to load the API you wish to use:\n\n```javascript\ngapi.server.load('plus','v1',function(){});\n```\n\nInside your load callback, you can generate your requests using the `gapi.server.API_NAME.NAMESPACE.FUNCTION(OPTIONS)` pattern:\n\n```javascript\nvar request = gapi.server.plus.people.get({userId: '102147307918874735077'});\n```\n\nTo execute your request, you can call `REQUEST.execute(CALLBACK(RESPONSE))`:\n\n```javascript\nrequest.execute(function(resp){});\n```\n\nThe response of the callback is a JSON object that you can work with:\n\n```javascript\nres.writeHead(200, {'Content-Type': 'text/plain'});\nres.end(JSON.stringify(resp));\n```\n\nPutting it all together:\n\n```javascript\ngapi.server.setApiKey('YOUR_API_KEY');\ngapi.server.load('plus','v1',function(){\n\tvar request = gapi.server.plus.people.get({userId: '102147307918874735077'});\n\trequest.execute(function(resp){\n\t\tres.writeHead(200, {'Content-Type': 'text/plain'});\n\t\tres.end(JSON.stringify(resp));\n\t});\n});\n```\n\n## Currently Implemented Request Functions and Options\n\n### Google+ V1 ('plus','v1')\nGet One Activity\n\n```javascript\n/*\n *\n * activityId is Required\n *\n */\ngapi.server.plus.activities.get({\n\tactivityId : '',\n\tfields : ''\n});\n```\n\nList Activities of One User\n\n```javascript\n/*\n *\n * userId and collection are Required\n * collection : 'public' is the only available option currently\n * maxResults can be an integer from 1-100\n *\n */\ngapi.server.plus.activities.list({\n\tuserId : '',\n\tcollection : 'public',\n\tmaxResults : 100,\n\tpageToken : '',\n\tfields : ''\n});\n```\n\nSearch all Activities using Query\n\n```javascript\n/*\n *\n * query is Required\n * separate words in query with a +\n * maxResults can be an integer from 1-20;\n *\n */\ngapi.server.plus.activities.search({\n\tquery : '',\n\tlanguage : '',\n\tmaxResults : 20,\n\torderBy : '',\n\tpageToken : '',\n\tfields : ''\n});\n```\n\nGet One Comment\n\n```javascript\n/*\n *\n * commentId is Required\n *\n */\ngapi.server.plus.comments.get({\n\tcommentId : '',\n\tfields : ''\n});\n```\n\nList All Comments of One Activity\n\n```javascript\n/*\n *\n * activityId is Required\n * maxResults can be an integer from 0-100;\n *\n */\ngapi.server.plus.comments.list({\n\tactivityId : '',\n\tmaxResults : 100,\n\tpageToken : '',\n\tfields : ''\n});\n```\n\nGet One Person\n\n```javascript\n/*\n *\n * userId is Required\n *\n */\ngapi.server.plus.people.get({\n\tuserId: '',\n\tfields : ''\n});\n```\n\nList the PlusOners or Resharers of One Activity\n\n```javascript\n/*\n *\n * activityId and collection are Required\n * collection can be either 'resharers' or 'plusoners'\n * maxResults can be an integer from 1-100;\n *\n */\ngapi.server.plus.people.listByActivity({\n\tactivityId: '',\n\tcollection: '',\n\tmaxResults: 100,\n\tpageToken : '',\n\tfields : ''\n});\n```\n\nSearch all People using Query\n\n```javascript\n/*\n *\n * query is Required\n * separate words in query with a +\n * maxResults can be an integer from 1-20;\n *\n */\ngapi.server.plus.people.search({\n\tquery : '',\n\tlanguage : '',\n\tmaxResults : 20,\n\torderBy : '',\n\tpageToken : '',\n\tfields : ''\n});\n```\n\n### Google Webfonts V1 ('webfonts','v1')\n\nRetrieves the list of fonts currently served by the Google Web Fonts Developer API\n\n```javascript\n/*\n *\n * none are Required\n * sort can be: 'alpha', 'date', 'popularity', 'style', or 'trending'\n *\n */\ngapi.server.webfonts.webfonts.list({\n\tsort : '',\n\tfields : ''\n});\n```\n\n## Examples\n\nYou can view further examples in the [example folder.](https://github.com/phated/gapi-npm/tree/master/examples)\n\nRunning the Express example is as easy as entering (in terminal)\n\n\t$ cd ./node_modules/gapi/examples/express-example/ && npm install ./ && node app.js\n\n## Tests\n\n    $ npm test gapi\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2011 Phated <blaine@iceddev.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/phated/node-gapi/issues"
  },
  "_id": "gapi@0.0.3",
  "dist": {
    "shasum": "cf35d817003cead61882c869b9c350b996437c33"
  },
  "_from": "gapi@",
  "_resolved": "https://registry.npmjs.org/gapi/-/gapi-0.0.3.tgz"
}
